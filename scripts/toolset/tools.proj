<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. -->
<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <RepoRoot Condition=" '$(RepoRoot)' == '' ">$([MSBuild]::NormalizeDirectory('$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), 'LICENSE'))'))</RepoRoot>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <ImportDirectoryBuildTargets>false</ImportDirectoryBuildTargets>
    <AutomaticallyUseReferenceAssemblyPackages>false</AutomaticallyUseReferenceAssemblyPackages>
  </PropertyGroup>

  <Import Project="$(RepoRoot)eng\Versions.props" />

  <!--
    Prevent NuGet from using cached packages
    Workaround for https://github.com/NuGet/Home/issues/3116
  -->
  <PropertyGroup>
    <RestoreNoCache Condition=" '$(ContinuousIntegrationBuild)' == 'true' ">true</RestoreNoCache>
  </PropertyGroup>

  <!--
    Configure NuGet Restore to use NuGet.config file in the repository root.
    We could drop a custom NuGet.config to the containing directory but it's simpler
    if we use the same config for all restore operations.
  -->
  <PropertyGroup>
    <RestoreConfigFile>$(RepoRoot)NuGet.config</RestoreConfigFile>
  </PropertyGroup>

  <ItemGroup>
    <!-- Clear references, the SDK may add some depending on UsuingToolXxx settings, but we only want to restore the following -->
    <PackageReference Remove="@(PackageReference)"/>
  </ItemGroup>
  <Import Project="$(RepoRoot)eng\Tools.props" />
</Project>
